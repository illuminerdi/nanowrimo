Some interesting methods for parsing xml, will use nokogiri, since rails site will probably use mechanize, unless I decide to make the gem handle finding writing buddies.
http://railstips.org/2008/8/12/parsing-xml-with-ruby

must remember this - when creating a subdir in lib for new classes in your gem, the Rakefile needs to be told to look in the ./lib folder as a starting point.

FakeWeb seems to be a better solution than FlexMock for mocking up network calls.

FakeWeb is throwing the following set of errors when running tests with warnings:
/Library/Ruby/Gems/1.8/gems/fakeweb-1.2.2/lib/fake_web/ext/net_http.rb:8: warning: method redefined; discarding old initialize
/Library/Ruby/Gems/1.8/gems/fakeweb-1.2.2/lib/fake_web/ext/net_http.rb:28: warning: redefine socket_type

If I insert the following line above line 8 of that net_http.rb in fakeweb, the warnings go away:
alias :old_initialize :initialize

I should probably submit this as a patch, since warnings are annoying. Yay, I patched chrisk's codebase and submitted a polite pull request! Also joined the Google Group. 

ChrisK is folding my fixes into the next release of FakeWeb, so awesomesauce.

05/25 - noticed odd behavior with FakeWeb and Mechanize, finally got a work-around for this project, but started a conversation on the Google Group for FakeWeb detailing what I ran into and how I fixed it. Offered to bugfix if it was something other than me misunderstanding how the gem worked.

I got a response on this. It was kinda vague, but ChrisK explained that there were many issues with how FakeWeb handled responses, and that he'd like to consolidate all the current available options (:string, :file, :response) into a single option, namely :body. String and File responses in FakeWeb right now set the content-type to nil, which doesn't make much sense at all.

Caching data is annoying. I'm sure I did better on this project than I did on the apache log caching. Any advice on how to implement this would be appreciated.

It looks like Mechanize handles its own caching?